# Generated by Django 2.0.6 on 2018-06-12 23:13

from django.db import migrations, models
import postcot_primary.base_types


class Migration(migrations.Migration):

    dependencies = [
        ('postcot', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='accesscontrol',
            name='reverses_hostname',
            field=models.BooleanField(),
        ),
        migrations.AlterField(
            model_name='account',
            name='hashed_password',
            field=models.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name='account',
            name='password_schema',
            field=models.CharField(choices=[('Plain', (postcot_primary.base_types.PasswordSchema('PLAIN'),)), ('CRYPT Schemas', (postcot_primary.base_types.PasswordSchema('CRYPT'), postcot_primary.base_types.PasswordSchema('DES-CRYPT'), postcot_primary.base_types.PasswordSchema('MD5-CRYPT'), postcot_primary.base_types.PasswordSchema('SHA256-CRYPT'), postcot_primary.base_types.PasswordSchema('SHA512-CRYPT'), postcot_primary.base_types.PasswordSchema('BLF-CRYPT'))), ('MD5 Based Schemas', (postcot_primary.base_types.PasswordSchema('PLAIN-MD5'), postcot_primary.base_types.PasswordSchema('LDAP-MD5'), postcot_primary.base_types.PasswordSchema('SMD5'))), ('SHA Based Schemas', (postcot_primary.base_types.PasswordSchema('SHA'), postcot_primary.base_types.PasswordSchema('SHA256'), postcot_primary.base_types.PasswordSchema('SHA512'), postcot_primary.base_types.PasswordSchema('SSHA'), postcot_primary.base_types.PasswordSchema('SSHA256'), postcot_primary.base_types.PasswordSchema('SSHA512'))), ('Other', (postcot_primary.base_types.PasswordSchema('PBKDF2'),))], default='BLF-CRYPT', help_text="<p>\n    Schema for encrypting the stored password. The password would never be \n    stored with what it is when you input it unless you choose the \n    <b>PLAIN</b> schema. This is a way to protect your password from\n    stealing by hacking into your server and pulling your database off.\n</p>\n<ul>\n    <li>\n        <b>PLAIN</b> is discouraged. If you want to set the stored \n        password directly, check <b>Sets Encrypted Password Directly</b>\n    </li>\n    <li>\n        <b>CRYPT</b> schemas are generated with libc's crypt() function.\n    </li>\n</ul>\n", max_length=256, verbose_name='Password Schema'),
        ),
    ]
